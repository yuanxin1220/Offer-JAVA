package offer;

class BinaryTreeNode{
	int		m_value;
	BinaryTreeNode m_pleft;
	BinaryTreeNode m_pright;
	public BinaryTreeNode(int val) {
		this.m_value=val;
		m_pleft=null;
		m_pright=null;
	}
}

public class T07_BinaryTree {

	public static void printTree(BinaryTreeNode head)
	{
		System.out.println("Binary Tree:");
		printInOrder(head,0,"H",17);
		System.out.println();
		
	}
	public static void printInOrder(BinaryTreeNode head,int height,String to,int len) {
		if(head==null)
			return;
		printInOrder(head.m_pright,height+1,"v",len);
		String val=to+head.m_value+to;
		int lenM=val.length();
		int lenL=(len-lenM)/2;
		int lenR=len-lenM-lenL;
		val=getSpace(lenL)+val+getSpace(lenR);
		System.out.println(getSpace(height*len)+val);
		//System.out.println(Integer.toString(height*len)+" "+Integer.toString(lenL)+" "+val+" "+Integer.toString(lenR));
		printInOrder(head.m_pleft,height+1,"^",len);
	}	
	public static String getSpace(int num) {
		String space=" ";
		StringBuffer buf=new StringBuffer("");
		for(int i=0;i<num;i++)
			buf.append(space);
		return buf.toString();
	}
}
