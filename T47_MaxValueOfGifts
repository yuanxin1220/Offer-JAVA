package offer;
public class T47_MaxValueOfGifts {
	/*礼物的最大值
	 * f(i,j)=max[f(i-1,j)+f(i,j-1)]+gift[i,j]
	 */
	public int getMaxValue_solution1(int[] values,int rows,int cols)
	{
		if(values==null|rows<=0||cols<=0||rows*cols!=values.length)
			return 0;

		int[][] maxValues=new int[rows][cols];
		
		for(int i=0;i<rows;++i)
		{
			for(int j=0;j<cols;++j)
			{
				int left=0;
				int up=0;
				
				if(i>0)
					up=maxValues[i-1][j];
				if(j>0)
					left=maxValues[i][j-1];
				maxValues[i][j]=Math.max(left, up)+values[i*cols+j];
			}
		}
		return maxValues[rows-1][cols-1];
	}
	
	public int getMaxValue_solution2(int[] values,int rows,int cols)
	{
		if(values==null||rows<=0||cols<=0||rows*cols!=values.length)
			return 0;
		int[] maxValues=new int[cols];
		
		for(int i=0;i<rows;++i)
		{
			for(int j=0;j<cols;j++)
			{
				int up=0,left=0;
				if(i>0)
					up=maxValues[j];
				if(j>0)
					left=maxValues[j-1];
				
				maxValues[j]=Math.max(up, left)+values[i*cols+j];
			}
		}
		return maxValues[cols-1];
	}
	
	public static void main(String[] args)
	{
		T47_MaxValueOfGifts main=new T47_MaxValueOfGifts();
		
		/*多行多列
		int[] values= {1, 2, 3 , 4, 5, 6 , 7, 8, 9};
		System.out.println(main.getMaxValue_solution1(values, 3, 3));
		System.out.println(main.getMaxValue_solution2(values, 3, 3));
		 */
		
		/*一行
		int[] values_1row= {1, 10, 3, 8 };
		System.out.println(main.getMaxValue_solution1(values_1row, 1, 4));
		System.out.println(main.getMaxValue_solution2(values_1row, 1, 4));
		*/
		
		/*一列
		int[] values_1col= {1,12,5,3};
		System.out.println(main.getMaxValue_solution1(values_1col, 4, 1));
		System.out.println(main.getMaxValue_solution2(values_1col, 4, 1));
		 */
		
		/*一个数字
		int[] values_1col= {3};
		System.out.println(main.getMaxValue_solution1(values_1col, 1, 1));
		System.out.println(main.getMaxValue_solution2(values_1col, 1, 1));
		 */
		
		//输入空
		System.out.println(main.getMaxValue_solution1(null, 0, 0));
		System.out.println(main.getMaxValue_solution2(null, 0, 0));
	}
}
