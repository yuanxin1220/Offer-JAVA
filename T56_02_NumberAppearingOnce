package offer;
import java.lang.*;
public class T56_02_NumberAppearingOnce {
	public int FindNumberAppearingOnce(int[] numbers,int length)
	{
		if(numbers==null ||length<=0)
			throw new ArrayStoreException();

		int[] bitSum=new int[32];
		for(int i=0;i<length;++i)
		{
			int bitMask=1;
			for(int j=31;j>=0;--j)
			{
				int bit=numbers[i]&bitMask;
				if(bit!=0)
					bitSum[j]+=1;
				bitMask=bitMask<<1;
			}
		}
		
		int result=0;
		for(int i=0;i<32;++i)
		{
			result=result<<1;
			result+=bitSum[i]%3;
		}
		return result;			
	}
	
	// ====================测试代码====================
	public void Test(String testName, int numbers[], int length, int expected)
	{
	    int result = FindNumberAppearingOnce(numbers, length);
	    if(result == expected)
	        System.out.println(testName+" passed.");
	    else
	        System.out.println(testName+" failed.");
	}
	// 唯一的数字是正数
	public void Test1()
	{
	    int numbers[] = { 1024, -1025, 1024, -1025, 1024, -1025, 1023 };
	    int expected = 1023;
	    Test("Test1", numbers, numbers.length, expected);
	}
	// 唯一的数字是0
	public void Test2()
	{
	    int numbers[] = { -23, 0, 214, -23, 214, -23, 214 };
	    int expected = 0;
	    Test("Test2", numbers, numbers.length, expected);
	}
	// 唯一的数字是负数
	public void Test3()
	{
	    int numbers[] = { -10, 0, 0, 0 };
	    int expected = -10;
	    Test("Test3", numbers, numbers.length, expected);
	}

	public static void main(String[] args)
	{
		T56_02_NumberAppearingOnce main=new T56_02_NumberAppearingOnce();
		main.Test1();
		main.Test2();
		main.Test3();
	}
}
