package offer;

public class T29_PrintMatrix {
	public void PrintMatrixClockwisely(int[][] numbers,int columns,int rows)
	{
		if(numbers==null || columns<=0 || rows<=0)
			return;
		int start=0;
		while(columns>start*2 && rows>start*2)
		{
			PrintMatrixInCircle(numbers,columns,rows,start);
			start++;
		}
	}
	
	public void PrintMatrixInCircle(int[][] numbers,int columns,int rows,int start)
	{
		int endX=rows-1-start;
		int endY=columns-1-start;
		
		//从左到右打印一行
		for (int i=start;i<=endY;++i)
			System.out.print(numbers[start][i]+" ");
				
		//终止行号>起始行号 (至少两列) --> 从上到下打印一列
		if(endX>start)
		{
			for (int i=start+1;i<=endX;++i)
				System.out.print(numbers[i][endY]+" ");
		}
		
		//终止行号>起始行号 终止列号>起始列号 (至少两行两列) --> 从右到左打印一行
		if(endX>start && endY>start)
		{
			for (int i=endY-1;i>=start;--i)
				System.out.print(numbers[endX][i]+" ");
		}
		
		//终止行号>起始行号+1 终止列号>起始列号 (至少三行两列) --> 从下到上打印一列
		if(endX>start+1 && endY>start)
		{
			for (int i=endX-1;i>start;--i)
				System.out.print(numbers[i][start]+" ");
		}
	}

	// ====================== 测试代码 ======================
	public void Test(int columns,int rows)
	{
		System.out.println("Test Begins: "+columns+"columns, "+rows+"rows.");
		
		//参数检查
		if(columns<1 || rows<1)
			return;
		
		//需要打印矩阵的初始化
		int[][] numbers=new int[rows][columns];
		for (int i=0;i<rows;++i)
		{
			for(int j=0;j<columns;++j)
				numbers[i][j]=i*columns+j+1;
		}

		//顺时针打印矩阵
		PrintMatrixClockwisely(numbers,columns,rows);
		System.out.println();
	}
	
	public static void main(String[] args)
	{
		T29_PrintMatrix main=new T29_PrintMatrix();
		//一行
		main.Test(1, 3);
		//一列
		main.Test(3, 1);
		//一行一列
		main.Test(1, 1);
		//两行两列
		main.Test(2, 2);
		//三行三列
		main.Test(3, 3);
	}
}
